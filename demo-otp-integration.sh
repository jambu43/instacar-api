#!/bin/bash

# Configuration
BASE_URL="http://localhost:3000/api"
APP_KEY="instacar-secret-key-2024"
EMAIL="demo_user_$(date +%s)@example.com"
NAME="Demo User"
PHONE="+33123456789"
GENDER="MALE"

echo "üöÄ D√©monstration du Syst√®me d'Authentification OTP - InstaCar API"
echo "=================================================================="
echo ""

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction pour afficher les r√©sultats
print_result() {
    if [ $1 -eq 0 ]; then
        echo -e "${GREEN}‚úÖ $2${NC}"
    else
        echo -e "${RED}‚ùå $2${NC}"
    fi
}

# Fonction pour extraire des valeurs JSON
extract_json_value() {
    echo "$1" | grep -o "\"$2\":\"[^\"]*\"" | cut -d'"' -f4
}

echo -e "${BLUE}üìß √âtape 1: Demande d'OTP pour nouvel utilisateur${NC}"
echo "Endpoint: POST /auth/request-otp"
echo "Payload: { email: $EMAIL, name: $NAME, phone: $PHONE, gender: $GENDER }"
echo ""

RESPONSE=$(curl -s -X POST "$BASE_URL/auth/request-otp" \
  -H "Content-Type: application/json" \
  -H "instakey: $APP_KEY" \
  -d "{
    \"email\": \"$EMAIL\",
    \"name\": \"$NAME\",
    \"phone\": \"$PHONE\",
    \"gender\": \"$GENDER\"
  }")

if echo "$RESPONSE" | grep -q "success.*true"; then
    print_result 0 "‚úÖ Demande OTP r√©ussie"
    echo "R√©ponse: $RESPONSE"
    
    # Extraire le code OTP
    OTP_CODE=$(extract_json_value "$RESPONSE" "otpCode")
    echo -e "${YELLOW}üîê Code OTP re√ßu: $OTP_CODE${NC}"
else
    print_result 1 "‚ùå √âchec de la demande OTP"
    echo "Erreur: $RESPONSE"
    exit 1
fi

echo ""
echo -e "${BLUE}üîê √âtape 2: V√©rification du code OTP${NC}"
echo "Endpoint: POST /auth/verify-otp"
echo "Payload: { email: $EMAIL, otpCode: $OTP_CODE }"
echo ""

RESPONSE=$(curl -s -X POST "$BASE_URL/auth/verify-otp" \
  -H "Content-Type: application/json" \
  -H "instakey: $APP_KEY" \
  -d "{
    \"email\": \"$EMAIL\",
    \"otpCode\": \"$OTP_CODE\"
  }")

if echo "$RESPONSE" | grep -q "success.*true"; then
    print_result 0 "‚úÖ V√©rification OTP r√©ussie"
    echo "R√©ponse: $RESPONSE"
    
    # Extraire les tokens
    ACCESS_TOKEN=$(extract_json_value "$RESPONSE" "accessToken")
    REFRESH_TOKEN=$(extract_json_value "$RESPONSE" "refreshToken")
    USER_ID=$(echo "$RESPONSE" | grep -o "\"id\":[0-9]*" | cut -d':' -f2)
    
    echo -e "${YELLOW}üé´ Access Token: ${ACCESS_TOKEN:0:50}...${NC}"
    echo -e "${YELLOW}üîÑ Refresh Token: ${REFRESH_TOKEN:0:50}...${NC}"
    echo -e "${YELLOW}üë§ User ID: $USER_ID${NC}"
else
    print_result 1 "‚ùå √âchec de la v√©rification OTP"
    echo "Erreur: $RESPONSE"
    exit 1
fi

echo ""
echo -e "${BLUE}üë§ √âtape 3: Acc√®s au profil utilisateur${NC}"
echo "Endpoint: GET /auth/profile"
echo "Headers: Authorization: Bearer <access_token>"
echo ""

RESPONSE=$(curl -s -X GET "$BASE_URL/auth/profile" \
  -H "Content-Type: application/json" \
  -H "instakey: $APP_KEY" \
  -H "Authorization: Bearer $ACCESS_TOKEN")

if echo "$RESPONSE" | grep -q "success.*true"; then
    print_result 0 "‚úÖ Acc√®s au profil r√©ussi"
    echo "R√©ponse: $RESPONSE"
else
    print_result 1 "‚ùå √âchec de l'acc√®s au profil"
    echo "Erreur: $RESPONSE"
fi

echo ""
echo -e "${BLUE}üîÑ √âtape 4: Test de renouvellement de token${NC}"
echo "Endpoint: POST /auth/refresh"
echo "Payload: { refreshToken: <refresh_token> }"
echo ""

RESPONSE=$(curl -s -X POST "$BASE_URL/auth/refresh" \
  -H "Content-Type: application/json" \
  -H "instakey: $APP_KEY" \
  -d "{
    \"refreshToken\": \"$REFRESH_TOKEN\"
  }")

if echo "$RESPONSE" | grep -q "success.*true"; then
    print_result 0 "‚úÖ Renouvellement de token r√©ussi"
    echo "R√©ponse: $RESPONSE"
    
    # Extraire le nouveau token
    NEW_ACCESS_TOKEN=$(extract_json_value "$RESPONSE" "accessToken")
    echo -e "${YELLOW}üÜï Nouveau Access Token: ${NEW_ACCESS_TOKEN:0:50}...${NC}"
else
    print_result 1 "‚ùå √âchec du renouvellement de token"
    echo "Erreur: $RESPONSE"
fi

echo ""
echo -e "${BLUE}üö™ √âtape 5: Test de d√©connexion${NC}"
echo "Endpoint: POST /auth/logout"
echo "Headers: Authorization: Bearer <access_token>"
echo ""

RESPONSE=$(curl -s -X POST "$BASE_URL/auth/logout" \
  -H "Content-Type: application/json" \
  -H "instakey: $APP_KEY" \
  -H "Authorization: Bearer $ACCESS_TOKEN")

if echo "$RESPONSE" | grep -q "success.*true"; then
    print_result 0 "‚úÖ D√©connexion r√©ussie"
    echo "R√©ponse: $RESPONSE"
else
    print_result 1 "‚ùå √âchec de la d√©connexion"
    echo "Erreur: $RESPONSE"
fi

echo ""
echo -e "${BLUE}üõ°Ô∏è √âtape 6: Test de s√©curit√© - Acc√®s sans token${NC}"
echo "Endpoint: GET /auth/profile (sans Authorization header)"
echo ""

RESPONSE=$(curl -s -X GET "$BASE_URL/auth/profile" \
  -H "Content-Type: application/json" \
  -H "instakey: $APP_KEY")

if echo "$RESPONSE" | grep -q "Token d'authentification manquant"; then
    print_result 0 "‚úÖ S√©curit√©: Acc√®s correctement bloqu√© sans token"
    echo "R√©ponse: $RESPONSE"
else
    print_result 1 "‚ùå Probl√®me de s√©curit√©: Acc√®s autoris√© sans token"
    echo "R√©ponse: $RESPONSE"
fi

echo ""
echo -e "${BLUE}üîë √âtape 7: Test de s√©curit√© - Acc√®s sans cl√© d'application${NC}"
echo "Endpoint: POST /auth/request-otp (sans instakey header)"
echo ""

RESPONSE=$(curl -s -X POST "$BASE_URL/auth/request-otp" \
  -H "Content-Type: application/json" \
  -d "{
    \"email\": \"$EMAIL\"
  }")

if echo "$RESPONSE" | grep -q "Cl√© d'application manquante"; then
    print_result 0 "‚úÖ S√©curit√©: Acc√®s correctement bloqu√© sans cl√© d'app"
    echo "R√©ponse: $RESPONSE"
else
    print_result 1 "‚ùå Probl√®me de s√©curit√©: Acc√®s autoris√© sans cl√© d'app"
    echo "R√©ponse: $RESPONSE"
fi

echo ""
echo -e "${GREEN}üéâ D√©monstration termin√©e avec succ√®s !${NC}"
echo ""
echo -e "${YELLOW}üìã R√©sum√© du flux d'authentification OTP :${NC}"
echo "1. ‚úÖ Demande d'OTP ‚Üí Code g√©n√©r√© et affich√©"
echo "2. ‚úÖ V√©rification OTP ‚Üí Tokens JWT g√©n√©r√©s"
echo "3. ‚úÖ Acc√®s au profil ‚Üí Authentification r√©ussie"
echo "4. ‚úÖ Renouvellement token ‚Üí Nouveau token g√©n√©r√©"
echo "5. ‚úÖ D√©connexion ‚Üí Session ferm√©e"
echo "6. ‚úÖ S√©curit√© sans token ‚Üí Acc√®s bloqu√©"
echo "7. ‚úÖ S√©curit√© sans cl√© ‚Üí Acc√®s bloqu√©"
echo ""
echo -e "${BLUE}üîß Prochaines √©tapes pour l'int√©gration :${NC}"
echo "‚Ä¢ Configurer les variables SMTP pour l'envoi d'emails"
echo "‚Ä¢ Int√©grer dans votre application mobile/web"
echo "‚Ä¢ Tester avec de vrais utilisateurs"
echo "‚Ä¢ Configurer pour la production" 