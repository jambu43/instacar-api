#!/bin/bash

# Configuration
BASE_URL="http://localhost:3000/api"
APP_KEY="instacar-secret-key-2024"

echo "üöÄ Test du Syst√®me d'Inscription Complet - InstaCar API"
echo "========================================================"
echo ""

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction pour afficher les r√©sultats
print_result() {
    if [ $1 -eq 0 ]; then
        echo -e "${GREEN}‚úÖ $2${NC}"
    else
        echo -e "${RED}‚ùå $2${NC}"
    fi
}

# Fonction pour extraire des valeurs JSON
extract_json_value() {
    echo "$1" | grep -o "\"$2\":\"[^\"]*\"" | cut -d'"' -f4
}

echo -e "${BLUE}üìù Test 1: Inscription d'un nouvel utilisateur${NC}"
echo "Endpoint: POST /auth/register-user"
echo ""

USER_EMAIL="user_$(date +%s)@example.com"
USER_NAME="Test User"
USER_PHONE="+33123456789"

RESPONSE=$(curl -s -X POST "$BASE_URL/auth/register-user" \
  -H "Content-Type: application/json" \
  -H "instakey: $APP_KEY" \
  -d "{
    \"email\": \"$USER_EMAIL\",
    \"name\": \"$USER_NAME\",
    \"phone\": \"$USER_PHONE\",
    \"gender\": \"MALE\"
  }")

if echo "$RESPONSE" | grep -q "success.*true"; then
    print_result 0 "‚úÖ Inscription utilisateur r√©ussie"
    echo "R√©ponse: $RESPONSE"
    
    # Extraire le code OTP et l'ID utilisateur
    OTP_CODE=$(extract_json_value "$RESPONSE" "otpCode")
    USER_ID=$(echo "$RESPONSE" | grep -o "\"userId\":[0-9]*" | cut -d':' -f2)
    
    echo -e "${YELLOW}üîê Code OTP: $OTP_CODE${NC}"
    echo -e "${YELLOW}üë§ User ID: $USER_ID${NC}"
else
    print_result 1 "‚ùå √âchec de l'inscription utilisateur"
    echo "Erreur: $RESPONSE"
    exit 1
fi

echo ""
echo -e "${BLUE}üîê Test 2: V√©rification OTP pour l'utilisateur${NC}"
echo "Endpoint: POST /auth/verify-otp"
echo ""

RESPONSE=$(curl -s -X POST "$BASE_URL/auth/verify-otp" \
  -H "Content-Type: application/json" \
  -H "instakey: $APP_KEY" \
  -d "{
    \"email\": \"$USER_EMAIL\",
    \"otpCode\": \"$OTP_CODE\"
  }")

if echo "$RESPONSE" | grep -q "success.*true"; then
    print_result 0 "‚úÖ V√©rification OTP r√©ussie"
    echo "R√©ponse: $RESPONSE"
    
    # Extraire les tokens
    ACCESS_TOKEN=$(extract_json_value "$RESPONSE" "accessToken")
    REFRESH_TOKEN=$(extract_json_value "$RESPONSE" "refreshToken")
    
    echo -e "${YELLOW}üé´ Access Token: ${ACCESS_TOKEN:0:50}...${NC}"
    echo -e "${YELLOW}üîÑ Refresh Token: ${REFRESH_TOKEN:0:50}...${NC}"
else
    print_result 1 "‚ùå √âchec de la v√©rification OTP"
    echo "Erreur: $RESPONSE"
    exit 1
fi

echo ""
echo -e "${BLUE}üöó Test 3: Inscription d'un nouveau chauffeur${NC}"
echo "Endpoint: POST /auth/register-driver"
echo ""

DRIVER_PHONE="+33987654321"
DRIVER_NAME="Test Driver"
LICENSE_NUMBER="123456789"
PLATE_NUMBER="AB-123-CD"

RESPONSE=$(curl -s -X POST "$BASE_URL/auth/register-driver" \
  -H "Content-Type: application/json" \
  -H "instakey: $APP_KEY" \
  -d "{
    \"brand\": \"Toyota\",
    \"model\": \"Corolla\",
    \"year\": 2020,
    \"color\": \"Blanc\",
    \"plateNumber\": \"$PLATE_NUMBER\",
    \"capacity\": 4,
    \"city\": \"Paris\",
    \"vehicleType\": \"PROPRIETAIRE\",
    \"licenseNumber\": \"$LICENSE_NUMBER\",
    \"fullName\": \"$DRIVER_NAME\",
    \"phone\": \"$DRIVER_PHONE\"
  }")

if echo "$RESPONSE" | grep -q "success.*true"; then
    print_result 0 "‚úÖ Inscription chauffeur r√©ussie"
    echo "R√©ponse: $RESPONSE"
    
    # Extraire les informations
    DRIVER_OTP_CODE=$(extract_json_value "$RESPONSE" "otpCode")
    DRIVER_USER_ID=$(echo "$RESPONSE" | grep -o "\"userId\":[0-9]*" | cut -d':' -f2)
    DRIVER_ID=$(echo "$RESPONSE" | grep -o "\"driverId\":[0-9]*" | cut -d':' -f2)
    VEHICLE_ID=$(echo "$RESPONSE" | grep -o "\"vehicleId\":[0-9]*" | cut -d':' -f2)
    
    echo -e "${YELLOW}üîê Code OTP Chauffeur: $DRIVER_OTP_CODE${NC}"
    echo -e "${YELLOW}üë§ Driver User ID: $DRIVER_USER_ID${NC}"
    echo -e "${YELLOW}üöó Driver ID: $DRIVER_ID${NC}"
    echo -e "${YELLOW}üöô Vehicle ID: $VEHICLE_ID${NC}"
else
    print_result 1 "‚ùå √âchec de l'inscription chauffeur"
    echo "Erreur: $RESPONSE"
    exit 1
fi

echo ""
echo -e "${BLUE}üîê Test 4: V√©rification OTP pour le chauffeur${NC}"
echo "Endpoint: POST /auth/verify-otp"
echo ""

DRIVER_EMAIL="${DRIVER_PHONE}@driver.instacar.com"

RESPONSE=$(curl -s -X POST "$BASE_URL/auth/verify-otp" \
  -H "Content-Type: application/json" \
  -H "instakey: $APP_KEY" \
  -d "{
    \"email\": \"$DRIVER_EMAIL\",
    \"otpCode\": \"$DRIVER_OTP_CODE\"
  }")

if echo "$RESPONSE" | grep -q "success.*true"; then
    print_result 0 "‚úÖ V√©rification OTP chauffeur r√©ussie"
    echo "R√©ponse: $RESPONSE"
    
    # Extraire les tokens du chauffeur
    DRIVER_ACCESS_TOKEN=$(extract_json_value "$RESPONSE" "accessToken")
    DRIVER_REFRESH_TOKEN=$(extract_json_value "$RESPONSE" "refreshToken")
    
    echo -e "${YELLOW}üé´ Driver Access Token: ${DRIVER_ACCESS_TOKEN:0:50}...${NC}"
    echo -e "${YELLOW}üîÑ Driver Refresh Token: ${DRIVER_REFRESH_TOKEN:0:50}...${NC}"
else
    print_result 1 "‚ùå √âchec de la v√©rification OTP chauffeur"
    echo "Erreur: $RESPONSE"
    exit 1
fi

echo ""
echo -e "${BLUE}üìß Test 5: Demande OTP pour connexion (utilisateur existant)${NC}"
echo "Endpoint: POST /auth/request-otp"
echo ""

RESPONSE=$(curl -s -X POST "$BASE_URL/auth/request-otp" \
  -H "Content-Type: application/json" \
  -H "instakey: $APP_KEY" \
  -d "{
    \"email\": \"$USER_EMAIL\"
  }")

if echo "$RESPONSE" | grep -q "success.*true"; then
    print_result 0 "‚úÖ Demande OTP pour connexion r√©ussie"
    echo "R√©ponse: $RESPONSE"
    
    # Extraire le nouveau code OTP
    NEW_OTP_CODE=$(extract_json_value "$RESPONSE" "otpCode")
    echo -e "${YELLOW}üîê Nouveau Code OTP: $NEW_OTP_CODE${NC}"
else
    print_result 1 "‚ùå √âchec de la demande OTP pour connexion"
    echo "Erreur: $RESPONSE"
fi

echo ""
echo -e "${BLUE}üë§ Test 6: Acc√®s au profil utilisateur${NC}"
echo "Endpoint: GET /auth/profile"
echo ""

RESPONSE=$(curl -s -X GET "$BASE_URL/auth/profile" \
  -H "Content-Type: application/json" \
  -H "instakey: $APP_KEY" \
  -H "Authorization: Bearer $ACCESS_TOKEN")

if echo "$RESPONSE" | grep -q "success.*true"; then
    print_result 0 "‚úÖ Acc√®s au profil utilisateur r√©ussi"
    echo "R√©ponse: $RESPONSE"
else
    print_result 1 "‚ùå √âchec de l'acc√®s au profil utilisateur"
    echo "Erreur: $RESPONSE"
fi

echo ""
echo -e "${BLUE}üöó Test 7: Acc√®s au profil chauffeur${NC}"
echo "Endpoint: GET /auth/profile"
echo ""

RESPONSE=$(curl -s -X GET "$BASE_URL/auth/profile" \
  -H "Content-Type: application/json" \
  -H "instakey: $APP_KEY" \
  -H "Authorization: Bearer $DRIVER_ACCESS_TOKEN")

if echo "$RESPONSE" | grep -q "success.*true"; then
    print_result 0 "‚úÖ Acc√®s au profil chauffeur r√©ussi"
    echo "R√©ponse: $RESPONSE"
else
    print_result 1 "‚ùå √âchec de l'acc√®s au profil chauffeur"
    echo "Erreur: $RESPONSE"
fi

echo ""
echo -e "${BLUE}üõ°Ô∏è Test 8: Test de s√©curit√© - Demande OTP pour utilisateur inexistant${NC}"
echo "Endpoint: POST /auth/request-otp"
echo ""

RESPONSE=$(curl -s -X POST "$BASE_URL/auth/request-otp" \
  -H "Content-Type: application/json" \
  -H "instakey: $APP_KEY" \
  -d "{
    \"email\": \"nonexistent@example.com\"
  }")

if echo "$RESPONSE" | grep -q "Aucun compte trouv√©"; then
    print_result 0 "‚úÖ S√©curit√©: Demande OTP correctement rejet√©e pour utilisateur inexistant"
    echo "R√©ponse: $RESPONSE"
else
    print_result 1 "‚ùå Probl√®me de s√©curit√©: Demande OTP autoris√©e pour utilisateur inexistant"
    echo "R√©ponse: $RESPONSE"
fi

echo ""
echo -e "${GREEN}üéâ Tests du syst√®me d'inscription complet termin√©s !${NC}"
echo ""
echo -e "${YELLOW}üìã R√©sum√© du nouveau flux d'inscription :${NC}"
echo "1. ‚úÖ Inscription utilisateur ‚Üí Cr√©ation compte temporaire + OTP"
echo "2. ‚úÖ V√©rification OTP utilisateur ‚Üí Authentification + activation"
echo "3. ‚úÖ Inscription chauffeur ‚Üí Cr√©ation utilisateur + v√©hicule + chauffeur + OTP"
echo "4. ‚úÖ V√©rification OTP chauffeur ‚Üí Authentification + activation chauffeur"
echo "5. ‚úÖ Connexion utilisateur existant ‚Üí OTP pour connexion"
echo "6. ‚úÖ Acc√®s profil utilisateur ‚Üí Authentification JWT"
echo "7. ‚úÖ Acc√®s profil chauffeur ‚Üí Authentification JWT"
echo "8. ‚úÖ S√©curit√© ‚Üí Protection contre utilisateurs inexistants"
echo ""
echo -e "${BLUE}üîß Avantages du nouveau syst√®me :${NC}"
echo "‚Ä¢ Inscription compl√®te s√©par√©e de l'authentification"
echo "‚Ä¢ Support des r√¥les utilisateur et chauffeur"
echo "‚Ä¢ Cr√©ation automatique des v√©hicules pour les chauffeurs"
echo "‚Ä¢ V√©rification email obligatoire via OTP"
echo "‚Ä¢ S√©curit√© renforc√©e sans mots de passe"
echo "‚Ä¢ Flexibilit√© pour compl√©ter l'inscription plus tard" 